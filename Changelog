Version 0.5-0

	*  getLLVMTargets() returns the names of the available targets
	   for code generation.

	*  New interfaces to IRBuilder methods. 

	*  Types for representing SEXP types in routines.

	*  Ability to pass R objects (SEXPs) to and from routines.

	*  Support for passing a value to a routine expecting a Float.
	
	*  changed .llvm() to alias .llvmCallFunction() rather than
	   run() to avoid the overhead of method dispatch.

	*  Support for intrinsics.

Version 0.4-2

	*  Support for building from the LLVM subversion repository
	   for version 3.2 of LLVM.  See FAQ.xml.

Version 0.4-1

	*  ArrayType, VectorType, StructType.

	*  Methods for Instruction class. (Machine generated)

	*  Compiles and installs with LLVM 3.1.

	*  parseIR() function allows us to parse IR code and so  we
 	   could create the code via strings.
	  
Version 0.4-0

	*  Added getDescription() and method for Type and getTypeID(),
    	   getScalarType().

	*  Added createFPToSI() and createSIToFP().

Version 0.3-0

	*  The package automatically calls InitializeNativeTarget()
	   unless the R option  Rllvm.autoInitialize is set to FALSE
	   before the package is loaded.
	*  Added getTerminator(), getInsertBlock()

	*  Implemented getting logical constants for TRUE and FALSE.

Version 0.2-1

	*  Method for Optimize referred to a free variable rather than
  	   a parameter.

	*  Added getModuleFunctions(), getBlocks(), getPassManager()

Version 0.2-0

	*  The Optimize function and methods are now extended and
     	   apply to the code via creating a FunctionPassManager and
	   invoking its run() method (in C++ for now).
	   This can work on modules or individual functions.

	*  getModuleFunctions() allows us to get the list of functions
 	   in a module.

	*  showModule() returns the content as a string, but can also
	   write on the console/stdout().
           We might make it possible to write to a connection in the
	   future.

	*  Additional examples in experiments/ that show constant
	   folding, avoiding temporary variables.

Version 0.1-0

	*  Addition to configuration to check suitable version of llvm available on the machine.
