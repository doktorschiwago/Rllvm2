<?xml version="1.0"?>
<article xmlns:r="http://www.r-project.org"
         xmlns:xi="http://www.w3.org/2003/XInclude">

<articleinfo>

<title></title>

<author><firstname>Duncan</firstname><surname>Temple Lang</surname>
  <affiliation><orgname>University of California at Davis</orgname>
               <orgdiv>Department of Statistics</orgdiv>
  </affiliation>
</author>
</articleinfo>

<section>
<title></title>

<para>
The idea here is to compile a regular expression
in a module as a global variable and then reuse
it  across multiple calls without having to recompile it.
</para>


<para>
unsigned char * tables = pcre_maketables();
pcre_extra *rx = pcre_compile();

pcre_exec(rx) >= 0
</para>
<para>
<r:code>
library(RGCCTranslationUnit)
tu = parseTU("regexp.c.001t.tu")
r = resolveType(getRoutines(tu, files = "pcre.h"), tu)
enums = resolveType(getEnumerations(tu), tu)
</r:code>
The options are not enums, but #define's!
</para>


</section>
</article>